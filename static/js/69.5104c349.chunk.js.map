{"version":3,"file":"static/js/69.5104c349.chunk.js","mappings":"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","sources":["APIs/MovieAPI.js","components/MoviesList/MoviesList.styled.js","components/MoviesList/MoviesListItem.styled.js","components/MoviesList/MoviesListItem.jsx","components/MoviesList/MoviesList.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YjQyODlmMDBlMjE1NTE5MjQzODVjOTFkNGIwMTEzZSIsInN1YiI6IjY1MmJmMGM5MGNiMzM1MTZmNzQ3YzkzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VA4_81qNBPKQAKwMfUNWZXjuauQkEzVz0KQ7-yzUX58';\n\nexport class MovieAPI {\n  config = {\n    params: {\n      query: '',\n      page: 1,\n    },\n  };\n\n  setSearchQuestion(q) {\n    this.config.params.query = q;\n    this.config.params.page = 1;\n  }\n\n  getTrending() {\n    return axios('trending/movie/day', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  searchMovies() {\n    return axios('search/movie', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  getMovieDetails(movieId) {\n    return axios(`movie/${movieId}`).then(({ data }) => data);\n  }\n\n  getMovieCredits(movieId) {\n    return axios(`movie/${movieId}/credits`).then(({ data }) => data);\n  }\n\n  getMovieReviews(movieId) {\n    return axios(`movie/${movieId}/reviews`).then(({ data }) => data);\n  }\n\n  setParams(params) {\n    this.config.params = {\n      ...this.config.params,\n      ...params,\n    };\n  }\n\n  setConfig(config) {\n    for (const key in config) {\n      this.config[key] = { ...this.config[key], ...config[key] };\n    }\n  }\n}","import styled from \"styled-components\";\n\nexport const List = styled.ul`\ndisplay: grid;\ngrid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\ngap: 20px;\n`","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border: 1px solid gray;\n\n  a {\n    padding: 8px;\n    display: grid;\n    gap: 8px;\n  }\n\n  .thumb {\n    height: 300px;\n  }\n\n  img {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n  }\n`;\n","import { Link, useLocation } from 'react-router-dom';\nimport { Item } from './MoviesListItem.styled';\nimport img from 'img/img.png';\nconsole.log('img:', img);\n\nconst BASE_URL = 'https://image.tmdb.org/t/p/w400';\n\nexport function MoviesListItem({ data: { id, poster_path, title } }) {\n  const location = useLocation();\n  \n  return (\n    <Item>\n      <Link to={`/movies/${id}`} state={{ from: location }}>\n        <div className=\"thumb\">\n          <img\n            src={poster_path ? BASE_URL + poster_path : img}\n            alt=\"poster\"\n          />\n        </div>\n        <h2>{title}</h2>\n      </Link>\n    </Item>\n  );\n}\n\n","import { List } from \"./MoviesList.styled\";\nimport { MoviesListItem } from \"./MoviesListItem\";\n\nexport function MoviesList({data}) {\n    return <>\n        <List>\n            {data.map(item => <MoviesListItem key={`${item.id}${item.title}`} data={item} />)}\n        </List>\n    </>\n}","import { MovieAPI } from \"APIs/MovieAPI\";\nimport { Button } from \"components/Button/Button\";\nimport { MoviesList } from \"components/MoviesList/MoviesList\";\nimport { useEffect, useState } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\n\nconst movieAPI = new MovieAPI();\n\nexport default function Movies() {\n    const [sp, setSp] = useSearchParams();\n    const search = sp.get('search')\n    const [inputValue, setInputValue] = useState(search ||'');\n    const [movies, setMovies] = useState([]);\n    const [error, setError] = useState(null);\n    \n    \n    const handleSubmit = e => {\n        e.preventDefault()\n        const name = e.target.movie.value;\n        if(name)setSp({search: name})\n    }\n\n\n    useEffect(() => {\n        if (!search) return\n        setInputValue(search)\n        async function fetchData() {\n            try {\n                movieAPI.setSearchQuestion(search)\n                const resp = await movieAPI.searchMovies()\n                setMovies(resp.results)\n            } catch (error) {\n                setError(error)\n            }\n        }\n        fetchData()\n    }, [search])\n\n    return (\n      <>\n        <form onSubmit={handleSubmit}>\n          <input type=\"text\" name=\"movie\" value={inputValue} onChange={e => setInputValue(e.target.value)}/>\n          <Button text={'Search'} />\n            </form>\n            {movies.length > 0 && <MoviesList data={movies}/>}\n        {error && <h1>Oooops... Please reload page</h1>}\n      </>\n    );\n}\n\n// https://api.themoviedb.org/3/search/movie?q=batman&page=1\n// https://api.themoviedb.org/3/search/movie?query=batman&include_adult=false&page=1"],"names":["axios","MovieAPI","config","params","query","page","q","this","then","data","movieId","key","List","styled","Item","console","log","img","MoviesListItem","id","poster_path","title","location","useLocation","to","state","from","className","src","alt","MoviesList","map","item","movieAPI","Movies","useSearchParams","sp","setSp","search","get","useState","inputValue","setInputValue","movies","setMovies","error","setError","useEffect","setSearchQuestion","searchMovies","resp","results","fetchData","onSubmit","e","preventDefault","name","target","movie","value","type","onChange","text","length"],"sourceRoot":""}