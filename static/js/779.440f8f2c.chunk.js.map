{"version":3,"file":"static/js/779.440f8f2c.chunk.js","mappings":"4LAEAA,EAAAA,EAAAA,SAAAA,QAAyB,gCACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,cACE,6NAEK,IAAMC,EAAb,6CACEC,OAAS,CACPC,OAAQ,CACNC,MAAO,GACPC,KAAM,GAJZ,iDAQE,SAAkBC,GAChBC,KAAKL,OAAOC,OAAOC,MAAQE,EAC3BC,KAAKL,OAAOC,OAAOE,KAAO,CAC3B,GAXH,yBAaE,WAAe,IAAD,OACZ,OAAOL,EAAAA,EAAAA,GAAM,qBAAsBO,KAAKL,QAAQM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEtD,OADA,EAAKP,OAAOC,OAAOE,MAAQ,EACpBI,CACR,GACF,GAlBH,0BAoBE,WAAgB,IAAD,OACb,OAAOT,EAAAA,EAAAA,GAAM,eAAgBO,KAAKL,QAAQM,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEhD,OADA,EAAKP,OAAOC,OAAOE,MAAQ,EACpBI,CACR,GACF,GAzBH,6BA2BE,SAAgBC,GACd,OAAOV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,IAAWF,MAAK,qBAAGC,IAAH,GACvC,GA7BH,6BA+BE,SAAgBC,GACd,OAAOV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,aAA6BF,MAAK,qBAAGC,IAAH,GAC/C,GAjCH,6BAmCE,SAAgBC,GACd,OAAOV,EAAAA,EAAAA,GAAM,SAAD,OAAUU,EAAV,aAA6BF,MAAK,qBAAGC,IAAH,GAC/C,GArCH,uBAuCE,SAAUN,GACRI,KAAKL,OAAOC,QAAZ,kBACKI,KAAKL,OAAOC,QACZA,EAEN,GA5CH,uBA8CE,SAAUD,GACR,IAAK,IAAMS,KAAOT,EAChBK,KAAKL,OAAOS,IAAZ,kBAAwBJ,KAAKL,OAAOS,IAAST,EAAOS,GAEvD,KAlDH,I,iJCJaC,E,OAAcC,GAAAA,GAAH,wF,SCGlBC,EAAW,IAAIb,EAAAA,EAEN,SAASc,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOP,EAAP,KAAaQ,EAAb,KACA,GAAsBD,EAAAA,EAAAA,UAAS,MAA/B,eAAOE,EAAP,KAAYC,EAAZ,KACQT,GAAYU,EAAAA,EAAAA,MAAZV,QAeR,OAbAW,EAAAA,EAAAA,YAAU,WAAM,wCACd,6GAEuBP,EAASQ,gBAAgBZ,GAFhD,OAEUa,EAFV,OAGIN,EAAQM,EAAKC,SACbC,QAAQC,IAAI,QAASH,GAJzB,gDAMIJ,EAAO,EAAD,IANV,0DADc,uBAAC,WAAD,wBAUdQ,EACD,GAAE,CAACjB,KAGF,gCACGD,EAAKmB,OAAS,GACb,SAAChB,EAAD,UACGH,EAAKoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACR,2BACM,wBAAMD,KACN,uBAAKC,MAFFF,EADD,MAMK,MAElBZ,IAAO,2DAGb,C","sources":["APIs/MovieAPI.js","components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from \"axios\";\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.headers.common['Authorization'] =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiI0YjQyODlmMDBlMjE1NTE5MjQzODVjOTFkNGIwMTEzZSIsInN1YiI6IjY1MmJmMGM5MGNiMzM1MTZmNzQ3YzkzOSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.VA4_81qNBPKQAKwMfUNWZXjuauQkEzVz0KQ7-yzUX58';\n\nexport class MovieAPI {\n  config = {\n    params: {\n      query: '',\n      page: 1,\n    },\n  };\n\n  setSearchQuestion(q) {\n    this.config.params.query = q;\n    this.config.params.page = 1;\n  }\n\n  getTrending() {\n    return axios('trending/movie/day', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  searchMovies() {\n    return axios('search/movie', this.config).then(({ data }) => {\n      this.config.params.page += 1;\n      return data;\n    });\n  }\n\n  getMovieDetails(movieId) {\n    return axios(`movie/${movieId}`).then(({ data }) => data);\n  }\n\n  getMovieCredits(movieId) {\n    return axios(`movie/${movieId}/credits`).then(({ data }) => data);\n  }\n\n  getMovieReviews(movieId) {\n    return axios(`movie/${movieId}/reviews`).then(({ data }) => data);\n  }\n\n  setParams(params) {\n    this.config.params = {\n      ...this.config.params,\n      ...params,\n    };\n  }\n\n  setConfig(config) {\n    for (const key in config) {\n      this.config[key] = { ...this.config[key], ...config[key] };\n    }\n  }\n}","import styled from \"styled-components\";\n\nexport const ReviewsList = styled.ul`\ndisplay: grid;\ngap: 12px;\n\nh4 {\n    margin-bottom: 4px;\n}\n`","import { MovieAPI } from 'APIs/MovieAPI';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { ReviewsList } from './Reviews.styled';\n\nconst movieAPI = new MovieAPI();\n\nexport default function Reviews() {\n  const [data, setData] = useState([]);\n  const [err, setErr] = useState(null);\n  const { movieId } = useParams();\n\n  useEffect(() => {\n    async function fetchData() {\n      try {\n        const resp = await movieAPI.getMovieReviews(movieId);\n        setData(resp.results);\n        console.log('resp:', resp);\n      } catch (error) {\n        setErr(error);\n      }\n    }\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <>\n      {data.length > 0 ? \n        <ReviewsList>\n          {data.map(({ id, author, content }) => (\n            <li key={id}>\n                  <h4>{ author}</h4>\n                  <p>{ content}</p>\n            </li>\n          ))}\n        </ReviewsList> : 'N/A'\n      }\n      {err && <h1>Oooops... Please reload page</h1>}\n    </>\n  );\n}\n"],"names":["axios","MovieAPI","config","params","query","page","q","this","then","data","movieId","key","ReviewsList","styled","movieAPI","Reviews","useState","setData","err","setErr","useParams","useEffect","getMovieReviews","resp","results","console","log","fetchData","length","map","id","author","content"],"sourceRoot":""}